<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>介绍 on Go Crawler</title>
    <link>http://localhost:1313/go-crawler/docs/zh/</link>
    <description>Recent content in 介绍 on Go Crawler</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="http://localhost:1313/go-crawler/docs/zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>存储</title>
      <link>http://localhost:1313/go-crawler/docs/zh/docs/usage/item/default/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/go-crawler/docs/zh/docs/usage/item/default/</guid>
      <description>&lt;h3 id=&#34;存储&#34;&gt;&#xA;  存储&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%98%e5%82%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Item用于存储需要导出的数据和一些其他辅助信息。&#xA;框架里内置的Item涵盖了主要文件、数据库、消息队列等存储方式。&#xA;pkg.Item是一个接口，不能直接使用。pkg.ItemUnimplemented实现了pkg.Item的所有方法。&#xA;如果Item需要实现pkg.Item，可以组合pkg.ItemUnimplemented。 如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ItemNone&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pkg&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ItemUnimplemented&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Item有一些通用方法：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Name() pkg.ItemName&lt;/code&gt;&#xA;获取Item的具体类型，如pkg.ItemNone、pkg.ItemCsv、pkg.ItemJsonl、pkg.ItemMongo、pkg.ItemSqlite、pkg.ItemMysql、pkg.ItemKafka等，用于Item反序列化到具体Item实现。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetReferrer(string)&lt;/code&gt; 设置referrer，可以用于记录请求的来源，一般不需要自己设置，由ReferrerMiddleware自动设置。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Referrer() string&lt;/code&gt; 获取referrer。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetUniqueKey(string)&lt;/code&gt; 设置uniqueKey，可以用于过滤和其他唯一用途。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;UniqueKey() string&lt;/code&gt; 获取uniqueKey。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetId(any)&lt;/code&gt; 设置id，主要用于保存数据时的主键，和uniqueKey的一个区别是，id可能是在Response中产生，请求时不一定能获得。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Id() any&lt;/code&gt; 获取id。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetData(any)&lt;/code&gt; 设置data，这是要存储的完整数据。为了规范化，强制要求指针类型。存储到不同的目标时，data需要设置不同的格式。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Data() any&lt;/code&gt; 获取data。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;DataJson() string&lt;/code&gt; 获取data json字符串。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetFilesRequest([]pkg.Request)&lt;/code&gt; 设置文件的请求。这是一个slice，可以下载多个文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;FilesRequest() []pkg.Request&lt;/code&gt; 获取文件的请求。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetFiles([]pkg.File)&lt;/code&gt; 设置文件。下载后的文件通过这个方法设置到Item中。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Files() []pkg.File&lt;/code&gt; 获取文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetImagesRequest([]pkg.Request)&lt;/code&gt; 设置图片的请求。这是一个slice，可以下载多个图片。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ImagesRequest() []pkg.Request&lt;/code&gt; 获取图片的请求。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;SetImages([]pkg.Image)&lt;/code&gt; 设置图片。下载后的图片通过这个方法设置到Item中。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Images() []pkg.Image&lt;/code&gt; 获取图片。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;内置Item实现：框架提供了一些内置的Item实现，如pkg.ItemNone、pkg.ItemCsv、pkg.ItemJsonl、pkg.ItemMongo、pkg.ItemSqlite、&#xA;pkg.ItemMysql、pkg.ItemKafka等。&#xA;您可以根据需要，返回Item，并开启相应的Pipeline。如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;YieldItem&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewItemMongo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;collection&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SetUniqueKey&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;extra&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Keyword&lt;/span&gt;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SetId&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;extra&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Keyword&lt;/span&gt;).&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SetData&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spider&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WithOptions&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;pkg&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WithMongoPipeline&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;pkg.ItemNone 这个Item没有实现任何其他方法，主要用于调试。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemNone()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;pkg.ItemCsv 保存到csv中。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemCsv(filename string)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;filename：存储的文件名，不包括拓展名&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;pkg.ItemJsonl 保存到jsonl中。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemJsonl(filename string)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;filename：存储的文件名，不包括拓展名&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;pkg.ItemMongo 保存到mongo中。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemMongo(collection string, update bool)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;collection：mongo collection&lt;/li&gt;&#xA;&lt;li&gt;update：如果数据已存在mongo中，是否更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;pkg.ItemSqlite 保存到Sqlite中。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemSqlite(table string, update bool)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;table：sqlite table&lt;/li&gt;&#xA;&lt;li&gt;update：如果数据已存在mongo中，是否更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;pkg.ItemMysql 保存到mysql中。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemMysql(table string, update bool)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;table：mysql table&lt;/li&gt;&#xA;&lt;li&gt;update：如果数据已存在mongo中，是否更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;pkg.ItemKafka 保存到kafka中。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;items.NewItemKafka(topic string)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;topic：kafka topic&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
