// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.6
// source: pkg/api/proto/statistics.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrawlerStatus int32

const (
	CrawlerStatus_CrawlerStatusUnknown  CrawlerStatus = 0
	CrawlerStatus_CrawlerStatusReady    CrawlerStatus = 1
	CrawlerStatus_CrawlerStatusStarting CrawlerStatus = 2
	CrawlerStatus_CrawlerStatusRunning  CrawlerStatus = 3
	CrawlerStatus_CrawlerStatusIdle     CrawlerStatus = 4
	CrawlerStatus_CrawlerStatusStopping CrawlerStatus = 5
	CrawlerStatus_CrawlerStatusStopped  CrawlerStatus = 6
)

// Enum value maps for CrawlerStatus.
var (
	CrawlerStatus_name = map[int32]string{
		0: "CrawlerStatusUnknown",
		1: "CrawlerStatusReady",
		2: "CrawlerStatusStarting",
		3: "CrawlerStatusRunning",
		4: "CrawlerStatusIdle",
		5: "CrawlerStatusStopping",
		6: "CrawlerStatusStopped",
	}
	CrawlerStatus_value = map[string]int32{
		"CrawlerStatusUnknown":  0,
		"CrawlerStatusReady":    1,
		"CrawlerStatusStarting": 2,
		"CrawlerStatusRunning":  3,
		"CrawlerStatusIdle":     4,
		"CrawlerStatusStopping": 5,
		"CrawlerStatusStopped":  6,
	}
)

func (x CrawlerStatus) Enum() *CrawlerStatus {
	p := new(CrawlerStatus)
	*p = x
	return p
}

func (x CrawlerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrawlerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[0].Descriptor()
}

func (CrawlerStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[0]
}

func (x CrawlerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrawlerStatus.Descriptor instead.
func (CrawlerStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{0}
}

type SpiderStatus int32

const (
	SpiderStatus_SpiderStatusUnknown  SpiderStatus = 0
	SpiderStatus_SpiderStatusReady    SpiderStatus = 1
	SpiderStatus_SpiderStatusStarting SpiderStatus = 2
	SpiderStatus_SpiderStatusRunning  SpiderStatus = 3
	SpiderStatus_SpiderStatusIdle     SpiderStatus = 4
	SpiderStatus_SpiderStatusStopping SpiderStatus = 5
	SpiderStatus_SpiderStatusStopped  SpiderStatus = 6
)

// Enum value maps for SpiderStatus.
var (
	SpiderStatus_name = map[int32]string{
		0: "SpiderStatusUnknown",
		1: "SpiderStatusReady",
		2: "SpiderStatusStarting",
		3: "SpiderStatusRunning",
		4: "SpiderStatusIdle",
		5: "SpiderStatusStopping",
		6: "SpiderStatusStopped",
	}
	SpiderStatus_value = map[string]int32{
		"SpiderStatusUnknown":  0,
		"SpiderStatusReady":    1,
		"SpiderStatusStarting": 2,
		"SpiderStatusRunning":  3,
		"SpiderStatusIdle":     4,
		"SpiderStatusStopping": 5,
		"SpiderStatusStopped":  6,
	}
)

func (x SpiderStatus) Enum() *SpiderStatus {
	p := new(SpiderStatus)
	*p = x
	return p
}

func (x SpiderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpiderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[1].Descriptor()
}

func (SpiderStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[1]
}

func (x SpiderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpiderStatus.Descriptor instead.
func (SpiderStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{1}
}

type JobStatus int32

const (
	JobStatus_JobStatusUnknown  JobStatus = 0
	JobStatus_JobStatusReady    JobStatus = 1
	JobStatus_JobStatusStarting JobStatus = 2
	JobStatus_JobStatusRunning  JobStatus = 3
	JobStatus_JobStatusIdle     JobStatus = 4
	JobStatus_JobStatusStopping JobStatus = 5
	JobStatus_JobStatusSuccess  JobStatus = 6
	JobStatus_JobStatusFailure  JobStatus = 7
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JobStatusUnknown",
		1: "JobStatusReady",
		2: "JobStatusStarting",
		3: "JobStatusRunning",
		4: "JobStatusIdle",
		5: "JobStatusStopping",
		6: "JobStatusSuccess",
		7: "JobStatusFailure",
	}
	JobStatus_value = map[string]int32{
		"JobStatusUnknown":  0,
		"JobStatusReady":    1,
		"JobStatusStarting": 2,
		"JobStatusRunning":  3,
		"JobStatusIdle":     4,
		"JobStatusStopping": 5,
		"JobStatusSuccess":  6,
		"JobStatusFailure":  7,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[2].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[2]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{2}
}

type JobMode int32

const (
	JobMode_JobModeUnknown JobMode = 0
	JobMode_JobModeOnce    JobMode = 1
	JobMode_JobModeLoop    JobMode = 2
	JobMode_JobModeCron    JobMode = 3
)

// Enum value maps for JobMode.
var (
	JobMode_name = map[int32]string{
		0: "JobModeUnknown",
		1: "JobModeOnce",
		2: "JobModeLoop",
		3: "JobModeCron",
	}
	JobMode_value = map[string]int32{
		"JobModeUnknown": 0,
		"JobModeOnce":    1,
		"JobModeLoop":    2,
		"JobModeCron":    3,
	}
)

func (x JobMode) Enum() *JobMode {
	p := new(JobMode)
	*p = x
	return p
}

func (x JobMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[3].Descriptor()
}

func (JobMode) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[3]
}

func (x JobMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobMode.Descriptor instead.
func (JobMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{3}
}

type TaskStatus int32

const (
	TaskStatus_TaskStatusUnknown TaskStatus = 0
	TaskStatus_TaskStatusPending TaskStatus = 1
	TaskStatus_TaskStatusRunning TaskStatus = 2
	TaskStatus_TaskStatusSuccess TaskStatus = 3
	TaskStatus_TaskStatusFailure TaskStatus = 4
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TaskStatusUnknown",
		1: "TaskStatusPending",
		2: "TaskStatusRunning",
		3: "TaskStatusSuccess",
		4: "TaskStatusFailure",
	}
	TaskStatus_value = map[string]int32{
		"TaskStatusUnknown": 0,
		"TaskStatusPending": 1,
		"TaskStatusRunning": 2,
		"TaskStatusSuccess": 3,
		"TaskStatusFailure": 4,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[4].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[4]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{4}
}

type RequestStatus int32

const (
	RequestStatus_RequestStatusUnknown RequestStatus = 0
	RequestStatus_RequestStatusPending RequestStatus = 1
	RequestStatus_RequestStatusRunning RequestStatus = 2
	RequestStatus_RequestStatusSuccess RequestStatus = 3
	RequestStatus_RequestStatusFailure RequestStatus = 4
)

// Enum value maps for RequestStatus.
var (
	RequestStatus_name = map[int32]string{
		0: "RequestStatusUnknown",
		1: "RequestStatusPending",
		2: "RequestStatusRunning",
		3: "RequestStatusSuccess",
		4: "RequestStatusFailure",
	}
	RequestStatus_value = map[string]int32{
		"RequestStatusUnknown": 0,
		"RequestStatusPending": 1,
		"RequestStatusRunning": 2,
		"RequestStatusSuccess": 3,
		"RequestStatusFailure": 4,
	}
)

func (x RequestStatus) Enum() *RequestStatus {
	p := new(RequestStatus)
	*p = x
	return p
}

func (x RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[5].Descriptor()
}

func (RequestStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[5]
}

func (x RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus.Descriptor instead.
func (RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{5}
}

type ItemStatus int32

const (
	ItemStatus_ItemStatusUnknown ItemStatus = 0
	ItemStatus_ItemStatusPending ItemStatus = 1
	ItemStatus_ItemStatusRunning ItemStatus = 2
	ItemStatus_ItemStatusSuccess ItemStatus = 3
	ItemStatus_ItemStatusFailure ItemStatus = 4
)

// Enum value maps for ItemStatus.
var (
	ItemStatus_name = map[int32]string{
		0: "ItemStatusUnknown",
		1: "ItemStatusPending",
		2: "ItemStatusRunning",
		3: "ItemStatusSuccess",
		4: "ItemStatusFailure",
	}
	ItemStatus_value = map[string]int32{
		"ItemStatusUnknown": 0,
		"ItemStatusPending": 1,
		"ItemStatusRunning": 2,
		"ItemStatusSuccess": 3,
		"ItemStatusFailure": 4,
	}
)

func (x ItemStatus) Enum() *ItemStatus {
	p := new(ItemStatus)
	*p = x
	return p
}

func (x ItemStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_statistics_proto_enumTypes[6].Descriptor()
}

func (ItemStatus) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_statistics_proto_enumTypes[6]
}

func (x ItemStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemStatus.Descriptor instead.
func (ItemStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{6}
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crawler *Crawler `protobuf:"bytes,1,opt,name=crawler,proto3" json:"crawler,omitempty"`
	Spider  *Spider  `protobuf:"bytes,2,opt,name=spider,proto3" json:"spider,omitempty"`
	Job     *Job     `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Task    *Task    `protobuf:"bytes,4,opt,name=task,proto3" json:"task,omitempty"`
	Request *Request `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	Item    *Item    `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetCrawler() *Crawler {
	if x != nil {
		return x.Crawler
	}
	return nil
}

func (x *Context) GetSpider() *Spider {
	if x != nil {
		return x.Spider
	}
	return nil
}

func (x *Context) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Context) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Context) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Context) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type Crawler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context    *Context               `protobuf:"bytes,1,opt,name=Context,proto3" json:"Context,omitempty"`
	Id         string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Status     CrawlerStatus          `protobuf:"varint,3,opt,name=Status,proto3,enum=api.CrawlerStatus" json:"Status,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	StopReason string                 `protobuf:"bytes,7,opt,name=StopReason,proto3" json:"StopReason,omitempty"`
}

func (x *Crawler) Reset() {
	*x = Crawler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Crawler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crawler) ProtoMessage() {}

func (x *Crawler) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crawler.ProtoReflect.Descriptor instead.
func (*Crawler) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{1}
}

func (x *Crawler) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Crawler) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Crawler) GetStatus() CrawlerStatus {
	if x != nil {
		return x.Status
	}
	return CrawlerStatus_CrawlerStatusUnknown
}

func (x *Crawler) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Crawler) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *Crawler) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Crawler) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

type Spider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context    *Context               `protobuf:"bytes,1,opt,name=Context,proto3" json:"Context,omitempty"`
	Id         uint64                 `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Status     SpiderStatus           `protobuf:"varint,4,opt,name=Status,proto3,enum=api.SpiderStatus" json:"Status,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	StopReason string                 `protobuf:"bytes,8,opt,name=StopReason,proto3" json:"StopReason,omitempty"`
}

func (x *Spider) Reset() {
	*x = Spider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spider) ProtoMessage() {}

func (x *Spider) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spider.ProtoReflect.Descriptor instead.
func (*Spider) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{2}
}

func (x *Spider) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Spider) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Spider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spider) GetStatus() SpiderStatus {
	if x != nil {
		return x.Status
	}
	return SpiderStatus_SpiderStatusUnknown
}

func (x *Spider) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Spider) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *Spider) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Spider) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context     *Context               `protobuf:"bytes,1,opt,name=Context,proto3" json:"Context,omitempty"`
	Id          string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	SubId       uint64                 `protobuf:"varint,3,opt,name=SubId,proto3" json:"SubId,omitempty"`
	Status      JobStatus              `protobuf:"varint,4,opt,name=Status,proto3,enum=api.JobStatus" json:"Status,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	UpdateTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Enable      bool                   `protobuf:"varint,8,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Func        string                 `protobuf:"bytes,9,opt,name=Func,proto3" json:"Func,omitempty"`
	Args        string                 `protobuf:"bytes,10,opt,name=Args,proto3" json:"Args,omitempty"`
	Mode        JobMode                `protobuf:"varint,11,opt,name=Mode,proto3,enum=api.JobMode" json:"Mode,omitempty"`
	Spec        string                 `protobuf:"bytes,12,opt,name=Spec,proto3" json:"Spec,omitempty"`
	OnlyOneTask bool                   `protobuf:"varint,13,opt,name=OnlyOneTask,proto3" json:"OnlyOneTask,omitempty"`
	StopReason  string                 `protobuf:"bytes,14,opt,name=StopReason,proto3" json:"StopReason,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{3}
}

func (x *Job) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetSubId() uint64 {
	if x != nil {
		return x.SubId
	}
	return 0
}

func (x *Job) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JobStatusUnknown
}

func (x *Job) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Job) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *Job) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Job) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Job) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *Job) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *Job) GetMode() JobMode {
	if x != nil {
		return x.Mode
	}
	return JobMode_JobModeUnknown
}

func (x *Job) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *Job) GetOnlyOneTask() bool {
	if x != nil {
		return x.OnlyOneTask
	}
	return false
}

func (x *Job) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context    *Context               `protobuf:"bytes,1,opt,name=Context,proto3" json:"Context,omitempty"`
	Id         string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	JobSubId   uint64                 `protobuf:"varint,3,opt,name=JobSubId,proto3" json:"JobSubId,omitempty"`
	Status     TaskStatus             `protobuf:"varint,4,opt,name=Status,proto3,enum=api.TaskStatus" json:"Status,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	StopReason string                 `protobuf:"bytes,8,opt,name=StopReason,proto3" json:"StopReason,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{4}
}

func (x *Task) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetJobSubId() uint64 {
	if x != nil {
		return x.JobSubId
	}
	return 0
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TaskStatusUnknown
}

func (x *Task) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Task) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *Task) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Task) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context    *Context               `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Id         string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UniqueKey  string                 `protobuf:"bytes,3,opt,name=uniqueKey,proto3" json:"uniqueKey,omitempty"`
	Extra      string                 `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	Data       string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Status     RequestStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=api.RequestStatus" json:"status,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Cookies    map[string]string      `protobuf:"bytes,10,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Referrer   string                 `protobuf:"bytes,11,opt,name=referrer,proto3" json:"referrer,omitempty"`
	StopReason string                 `protobuf:"bytes,12,opt,name=stopReason,proto3" json:"stopReason,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{5}
}

func (x *Request) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Request) GetUniqueKey() string {
	if x != nil {
		return x.UniqueKey
	}
	return ""
}

func (x *Request) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *Request) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Request) GetStatus() RequestStatus {
	if x != nil {
		return x.Status
	}
	return RequestStatus_RequestStatusUnknown
}

func (x *Request) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Request) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *Request) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Request) GetCookies() map[string]string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *Request) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *Request) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context    *Context               `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Id         string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Status     ItemStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=api.ItemStatus" json:"status,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Saved      bool                   `protobuf:"varint,7,opt,name=saved,proto3" json:"saved,omitempty"`
	StopReason string                 `protobuf:"bytes,8,opt,name=stopReason,proto3" json:"stopReason,omitempty"`
	Name       string                 `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Referrer   string                 `protobuf:"bytes,10,opt,name=referrer,proto3" json:"referrer,omitempty"`
	UniqueKey  string                 `protobuf:"bytes,11,opt,name=uniqueKey,proto3" json:"uniqueKey,omitempty"`
	DataId     *anypb.Any             `protobuf:"bytes,12,opt,name=dataId,proto3" json:"dataId,omitempty"`
	Meta       string                 `protobuf:"bytes,13,opt,name=meta,proto3" json:"meta,omitempty"`
	Data       string                 `protobuf:"bytes,14,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{6}
}

func (x *Item) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetStatus() ItemStatus {
	if x != nil {
		return x.Status
	}
	return ItemStatus_ItemStatusUnknown
}

func (x *Item) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Item) GetStopTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StopTime
	}
	return nil
}

func (x *Item) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Item) GetSaved() bool {
	if x != nil {
		return x.Saved
	}
	return false
}

func (x *Item) GetStopReason() string {
	if x != nil {
		return x.StopReason
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *Item) GetUniqueKey() string {
	if x != nil {
		return x.UniqueKey
	}
	return ""
}

func (x *Item) GetDataId() *anypb.Any {
	if x != nil {
		return x.DataId
	}
	return nil
}

func (x *Item) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *Item) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_proto_statistics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_statistics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_statistics_proto_rawDescGZIP(), []int{7}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_api_proto_statistics_proto protoreflect.FileDescriptor

var file_pkg_api_proto_statistics_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a,
	0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xbb, 0x02, 0x0a,
	0x07, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xcd, 0x02, 0x0a, 0x06, 0x53,
	0x70, 0x69, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xe1, 0x03, 0x0a, 0x03, 0x4a,
	0x6f, 0x62, 0x12, 0x26, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x75,
	0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x75,
	0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x6e, 0x6c, 0x79, 0x4f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x4f, 0x6e, 0x6c, 0x79, 0x4f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd1,
	0x02, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x53, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x90, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xef, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x61,
	0x76, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0xc2, 0x01,
	0x0a, 0x0d, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x72, 0x61,
	0x77, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x19, 0x0a,
	0x15, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x72, 0x61, 0x77,
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x10, 0x06, 0x2a, 0xba, 0x01, 0x0a, 0x0c, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x06, 0x2a,
	0xb8, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x07, 0x2a, 0x50, 0x0a, 0x07, 0x4a, 0x6f,
	0x62, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x6f, 0x62,
	0x4d, 0x6f, 0x64, 0x65, 0x4f, 0x6e, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x6f,
	0x62, 0x4d, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x6f, 0x70, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4a,
	0x6f, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x10, 0x03, 0x2a, 0x7f, 0x0a, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x04, 0x2a, 0x91, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10,
	0x04, 0x2a, 0x7f, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x10, 0x04, 0x32, 0x9c, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0d, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x12, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x27, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12,
	0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0b, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x69, 0x7a, 0x6f, 0x6e, 0x67, 0x79, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_proto_statistics_proto_rawDescOnce sync.Once
	file_pkg_api_proto_statistics_proto_rawDescData = file_pkg_api_proto_statistics_proto_rawDesc
)

func file_pkg_api_proto_statistics_proto_rawDescGZIP() []byte {
	file_pkg_api_proto_statistics_proto_rawDescOnce.Do(func() {
		file_pkg_api_proto_statistics_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_proto_statistics_proto_rawDescData)
	})
	return file_pkg_api_proto_statistics_proto_rawDescData
}

var file_pkg_api_proto_statistics_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_pkg_api_proto_statistics_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_api_proto_statistics_proto_goTypes = []interface{}{
	(CrawlerStatus)(0),            // 0: api.CrawlerStatus
	(SpiderStatus)(0),             // 1: api.SpiderStatus
	(JobStatus)(0),                // 2: api.JobStatus
	(JobMode)(0),                  // 3: api.JobMode
	(TaskStatus)(0),               // 4: api.TaskStatus
	(RequestStatus)(0),            // 5: api.RequestStatus
	(ItemStatus)(0),               // 6: api.ItemStatus
	(*Context)(nil),               // 7: api.Context
	(*Crawler)(nil),               // 8: api.Crawler
	(*Spider)(nil),                // 9: api.Spider
	(*Job)(nil),                   // 10: api.Job
	(*Task)(nil),                  // 11: api.Task
	(*Request)(nil),               // 12: api.Request
	(*Item)(nil),                  // 13: api.Item
	(*Response)(nil),              // 14: api.Response
	nil,                           // 15: api.Request.CookiesEntry
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 17: google.protobuf.Any
}
var file_pkg_api_proto_statistics_proto_depIdxs = []int32{
	8,  // 0: api.Context.crawler:type_name -> api.Crawler
	9,  // 1: api.Context.spider:type_name -> api.Spider
	10, // 2: api.Context.job:type_name -> api.Job
	11, // 3: api.Context.task:type_name -> api.Task
	12, // 4: api.Context.request:type_name -> api.Request
	13, // 5: api.Context.item:type_name -> api.Item
	7,  // 6: api.Crawler.Context:type_name -> api.Context
	0,  // 7: api.Crawler.Status:type_name -> api.CrawlerStatus
	16, // 8: api.Crawler.StartTime:type_name -> google.protobuf.Timestamp
	16, // 9: api.Crawler.StopTime:type_name -> google.protobuf.Timestamp
	16, // 10: api.Crawler.UpdateTime:type_name -> google.protobuf.Timestamp
	7,  // 11: api.Spider.Context:type_name -> api.Context
	1,  // 12: api.Spider.Status:type_name -> api.SpiderStatus
	16, // 13: api.Spider.StartTime:type_name -> google.protobuf.Timestamp
	16, // 14: api.Spider.StopTime:type_name -> google.protobuf.Timestamp
	16, // 15: api.Spider.UpdateTime:type_name -> google.protobuf.Timestamp
	7,  // 16: api.Job.Context:type_name -> api.Context
	2,  // 17: api.Job.Status:type_name -> api.JobStatus
	16, // 18: api.Job.StartTime:type_name -> google.protobuf.Timestamp
	16, // 19: api.Job.StopTime:type_name -> google.protobuf.Timestamp
	16, // 20: api.Job.UpdateTime:type_name -> google.protobuf.Timestamp
	3,  // 21: api.Job.Mode:type_name -> api.JobMode
	7,  // 22: api.Task.Context:type_name -> api.Context
	4,  // 23: api.Task.Status:type_name -> api.TaskStatus
	16, // 24: api.Task.StartTime:type_name -> google.protobuf.Timestamp
	16, // 25: api.Task.StopTime:type_name -> google.protobuf.Timestamp
	16, // 26: api.Task.UpdateTime:type_name -> google.protobuf.Timestamp
	7,  // 27: api.Request.context:type_name -> api.Context
	5,  // 28: api.Request.status:type_name -> api.RequestStatus
	16, // 29: api.Request.startTime:type_name -> google.protobuf.Timestamp
	16, // 30: api.Request.stopTime:type_name -> google.protobuf.Timestamp
	16, // 31: api.Request.updateTime:type_name -> google.protobuf.Timestamp
	15, // 32: api.Request.cookies:type_name -> api.Request.CookiesEntry
	7,  // 33: api.Item.context:type_name -> api.Context
	6,  // 34: api.Item.status:type_name -> api.ItemStatus
	16, // 35: api.Item.startTime:type_name -> google.protobuf.Timestamp
	16, // 36: api.Item.stopTime:type_name -> google.protobuf.Timestamp
	16, // 37: api.Item.updateTime:type_name -> google.protobuf.Timestamp
	17, // 38: api.Item.dataId:type_name -> google.protobuf.Any
	8,  // 39: api.Statistics.CrawlerChanged:input_type -> api.Crawler
	9,  // 40: api.Statistics.SpiderChanged:input_type -> api.Spider
	10, // 41: api.Statistics.JobChanged:input_type -> api.Job
	11, // 42: api.Statistics.TaskChanged:input_type -> api.Task
	12, // 43: api.Statistics.RequestChanged:input_type -> api.Request
	13, // 44: api.Statistics.ItemChanged:input_type -> api.Item
	14, // 45: api.Statistics.CrawlerChanged:output_type -> api.Response
	14, // 46: api.Statistics.SpiderChanged:output_type -> api.Response
	14, // 47: api.Statistics.JobChanged:output_type -> api.Response
	14, // 48: api.Statistics.TaskChanged:output_type -> api.Response
	14, // 49: api.Statistics.RequestChanged:output_type -> api.Response
	14, // 50: api.Statistics.ItemChanged:output_type -> api.Response
	45, // [45:51] is the sub-list for method output_type
	39, // [39:45] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_pkg_api_proto_statistics_proto_init() }
func file_pkg_api_proto_statistics_proto_init() {
	if File_pkg_api_proto_statistics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_proto_statistics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Crawler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_proto_statistics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_proto_statistics_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_proto_statistics_proto_goTypes,
		DependencyIndexes: file_pkg_api_proto_statistics_proto_depIdxs,
		EnumInfos:         file_pkg_api_proto_statistics_proto_enumTypes,
		MessageInfos:      file_pkg_api_proto_statistics_proto_msgTypes,
	}.Build()
	File_pkg_api_proto_statistics_proto = out.File
	file_pkg_api_proto_statistics_proto_rawDesc = nil
	file_pkg_api_proto_statistics_proto_goTypes = nil
	file_pkg_api_proto_statistics_proto_depIdxs = nil
}
